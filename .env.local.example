# =================================
# osu! Challenge Tracker Environment Configuration
# =================================

# Application Settings
NODE_ENV=development
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME="osu! Challenge Tracker"

# =================================
# Database Configuration (Supabase)
# =================================
NEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_KEY=your-service-role-key

# Database connection pool settings
SUPABASE_MAX_CONNECTIONS=20
SUPABASE_IDLE_TIMEOUT=30000

# =================================
# Authentication & Security
# =================================

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-min-32-chars
JWT_EXPIRES_IN=7d
JWT_ISSUER=osu-challenge-tracker

# Session Configuration
SESSION_SECRET=your-session-secret-key
SESSION_MAX_AGE=604800000
SESSION_SECURE=false
SESSION_SAME_SITE=lax

# Password hashing
BCRYPT_ROUNDS=12

# CORS Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# Rate Limiting
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_FAILED_REQUESTS=true

# =================================
# osu! API Configuration
# =================================
OSU_CLIENT_ID=your-osu-client-id
OSU_CLIENT_SECRET=your-osu-client-secret
OSU_REDIRECT_URI=http://localhost:3000/api/auth/callback

# API Endpoints
OSU_API_BASE_URL=https://osu.ppy.sh/api/v2
OSU_OAUTH_URL=https://osu.ppy.sh/oauth/authorize
OSU_TOKEN_URL=https://osu.ppy.sh/oauth/token

# API Rate Limiting
OSU_API_RATE_LIMIT=60
OSU_API_BURST_LIMIT=120
OSU_API_TIMEOUT=10000

# =================================
# Caching Configuration
# =================================

# Redis (if using)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_MAX_RETRIES=3

# Memory Cache Settings
CACHE_TTL_DEFAULT=300
CACHE_TTL_SCORES=120
CACHE_TTL_USERS=3600
CACHE_TTL_CHALLENGES=600

# =================================
# File Upload & Storage
# =================================

# Upload limits
MAX_FILE_SIZE=5242880
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,image/webp

# Storage configuration
STORAGE_PROVIDER=supabase
STORAGE_BUCKET=avatars
STORAGE_MAX_SIZE=52428800

# =================================
# Email Configuration (Optional)
# =================================

# SMTP Settings
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# Email Templates
EMAIL_FROM="osu! Challenge Tracker <noreply@yourapp.com>"
EMAIL_SUPPORT=support@yourapp.com

# =================================
# Monitoring & Logging
# =================================

# Logging
LOG_LEVEL=info
LOG_FILE=logs/app.log
LOG_MAX_SIZE=10485760
LOG_MAX_FILES=5

# Error Tracking (Sentry)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Performance Monitoring
ENABLE_PERFORMANCE_MONITORING=false
PERFORMANCE_SAMPLE_RATE=0.1

# Health Check
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000

# =================================
# Analytics & Tracking (Optional)
# =================================

# Google Analytics
NEXT_PUBLIC_GA_MEASUREMENT_ID=
GA_SECRET=

# Feature Flags
FEATURE_REALTIME_UPDATES=true
FEATURE_DARK_MODE=true
FEATURE_NOTIFICATIONS=false
FEATURE_ADMIN_PANEL=true

# =================================
# Development & Testing
# =================================

# Debug Settings
DEBUG_API_CALLS=false
DEBUG_AUTH=false
DEBUG_RATE_LIMITING=false

# Testing
TEST_DATABASE_URL=
TEST_OSU_CLIENT_ID=
TEST_OSU_CLIENT_SECRET=

# Mock Data
USE_MOCK_OSU_API=false
MOCK_DELAY_MS=100

# =================================
# Production Overrides
# =================================

# Security Headers
HSTS_MAX_AGE=31536000
CONTENT_SECURITY_POLICY="default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:;"

# Performance
COMPRESSION_ENABLED=true
COMPRESSION_LEVEL=6

# Database
DATABASE_POOL_SIZE=10
DATABASE_STATEMENT_TIMEOUT=30000
DATABASE_IDLE_TIMEOUT=10000

# =================================
# Worker Configuration (If using background jobs)
# =================================

# Worker Settings
WORKER_CONCURRENCY=2
WORKER_MAX_MEMORY=512
WORKER_TIMEOUT=300000

# Job Queue
QUEUE_REDIS_URL=redis://localhost:6379/1
QUEUE_DEFAULT_JOB_OPTIONS={"removeOnComplete":50,"removeOnFail":100}

# Scheduled Jobs
CRON_UPDATE_SCORES="*/2 * * * *"
CRON_CLEANUP_SESSIONS="0 0 * * *"
CRON_BACKUP_DATA="0 2 * * *"

# =================================
# Backup Configuration
# =================================

# Backup Settings
BACKUP_ENABLED=false
BACKUP_PROVIDER=s3
BACKUP_BUCKET=your-backup-bucket
BACKUP_RETENTION_DAYS=30

# AWS S3 (if using for backups)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1

# =================================
# Notes
# =================================

# To get started:
# 1. Copy this file to .env.local
# 2. Fill in the required values (marked as required in documentation)
# 3. Generate secure secrets for JWT_SECRET and SESSION_SECRET
# 4. Create a Supabase project and fill in the database configuration
# 5. Register an osu! OAuth application and fill in the osu! API configuration
#
# Security Notes:
# - Never commit .env.local to version control
# - Use different secrets for each environment
# - Rotate secrets regularly in production
# - Keep environment variables secure and limit access
#
# For production deployment:
# - Set NODE_ENV=production
# - Use strong, unique secrets
# - Enable HTTPS and set appropriate security headers
# - Configure proper CORS origins
# - Set up monitoring and logging
# - Use environment-specific database credentials